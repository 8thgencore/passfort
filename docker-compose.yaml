version: "3.8"

services:
  passfort:
    container_name: passfort-app
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8700:8080"
    restart: unless-stopped
    env_file:
      - .env
    environment:
      - CONFIG_PATH=./config/config.yaml

  postgres:
    image: postgres:16.3-alpine3.20
    container_name: passfort-storage
    restart: unless-stopped
    expose:
      - 5432
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: "${DB_NAME}"
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: "redis:7.2-alpine"
    container_name: passfort-cache
    command:
      - /bin/sh
      - -c
      # - Double dollars, so that the variable is not expanded by Docker Compose
      # - Surround by quotes, so that the shell does not split the password
      # - The ${variable:?message} syntax causes shell to exit with a non-zero
      #   code and print a message, when the variable is not set or empty
      - redis-server --requirepass "$${REDIS_PASSWORD:?REDIS_PASSWORD variable is not set}"
    restart: unless-stopped
    # ports:
    #   - 6379:6379
    expose:
      - 6379
    environment:
      ALLOW_EMPTY_PASSWORD: no
      REDIS_PASSWORD: "${REDIS_PASSWORD}"
    volumes:
      - redis:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres:
    driver: local
  redis:
    driver: local
